/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.sql.SQLException;
import java.util.Hashtable;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.naming.Context;
import javax.naming.InitialContext;

import modelo.Autor;
import modelo.Categoria;
import modelo.Editorial;
import modelo.Libro;
import negocio.GestionAutoresRemote;
import negocio.GestionCategoriasRemote;
import negocio.GestionEditorialesRemote;
import negocio.GestionLibrosRemote;

/**
 *
 * @author chris
 */
public class Ventana extends javax.swing.JFrame {
	
	private GestionLibrosRemote gl;
	private GestionAutoresRemote ga;
	private GestionCategoriasRemote gc;
	private GestionEditorialesRemote ge;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
    	try {
			this.conectarInstanciasLibro();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	try {
			this.conectarInstanciasAutor();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	try {
			this.conectarInstanciasCategoria();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	try {
			this.conectarInstanciasEditorial();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        initComponents();
        this.ListarComboAutor();
        this.ListarComboCategoria();
        this.ListarComboEditorial();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private String ListarComboAutor()
    {
        this.ComboAutor.removeAllItems();
        String nombre_autor = null;
        boolean band=false;
        ListarAutorCombo LAC = new ListarAutorCombo();
        band=LAC.ListarAutor();
        if(band==true)
        {
            for(int i=0;i<LAC.getNombre_autor().size();i++)
            {
                this.ComboAutor.addItem(LAC.getNombre_autor().get(i));   
            }
            
            nombre_autor=ComboAutor.getSelectedItem().toString();
            ComboAutor.setSelectedIndex(0);
        }
    return nombre_autor;
    }
    
    private String ListarComboCategoria()
    {
        this.ComboCategoria.removeAllItems();
        String nombre_categoria = null;
        boolean band=false;
        ListarCategoriaCombo LCC = new ListarCategoriaCombo();
        band=LCC.ListarCategoria();
        if(band==true)
        {
            for(int i=0;i<LCC.getNombre_categoria().size();i++)
            {
                this.ComboCategoria.addItem(LCC.getNombre_categoria().get(i));   
            }
            
            nombre_categoria=ComboCategoria.getSelectedItem().toString();
            ComboCategoria.setSelectedIndex(0);
        }
    return nombre_categoria;
    }
    
    private String ListarComboEditorial()
    {
        this.ComboEditorial.removeAllItems();
        String nombre_Editorial = null;
        boolean band=false;
        ListarEditorialCombo LEC = new ListarEditorialCombo();
        band=LEC.ListarEditorial();
        if(band==true)
        {
            for(int i=0;i<LEC.getNombre_editorial().size();i++)
            {
                this.ComboEditorial.addItem(LEC.getNombre_editorial().get(i));   
            }
            
            nombre_Editorial=ComboEditorial.getSelectedItem().toString();
            ComboEditorial.setSelectedIndex(0);
        }
    return nombre_Editorial;
    }
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        codigoLibro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TituloLibro = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        BotonGuardar = new javax.swing.JButton();
        ComboCategoria = new javax.swing.JComboBox<>();
        ComboAutor = new javax.swing.JComboBox<>();
        ComboEditorial = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLista = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ISBN");

        jLabel2.setText("Titulo");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("AUTOR");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("CATEGORIA");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("EDITORIAL");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("LIBRO");

        BotonGuardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BotonGuardar.setText("Guardar");
        BotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarActionPerformed(evt);
            }
        });

        ComboCategoria.setEditable(true);
        ComboCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboCategoriaMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ComboCategoriaMouseReleased(evt);
            }
        });
        ComboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCategoriaActionPerformed(evt);
            }
        });
        ComboCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ComboCategoriaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ComboCategoriaKeyReleased(evt);
            }
        });

        ComboAutor.setEditable(true);
        ComboAutor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboAutorMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ComboAutorMouseReleased(evt);
            }
        });
        ComboAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboAutorActionPerformed(evt);
            }
        });
        ComboAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ComboAutorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ComboAutorKeyReleased(evt);
            }
        });

        ComboEditorial.setEditable(true);
        ComboEditorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboEditorialMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ComboEditorialMouseReleased(evt);
            }
        });
        ComboEditorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboEditorialActionPerformed(evt);
            }
        });
        ComboEditorial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ComboEditorialKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ComboEditorialKeyReleased(evt);
            }
        });

        txtLista.setColumns(20);
        txtLista.setRows(5);
        jScrollPane1.setViewportView(txtLista);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(BotonGuardar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(codigoLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TituloLibro))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel10)
                                .addGap(108, 108, 108)
                                .addComponent(jLabel11)
                                .addGap(74, 74, 74)
                                .addComponent(jLabel12))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ComboAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ComboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel13)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(codigoLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(TituloLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(BotonGuardar)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboCategoriaMouseClicked
        // TODO add your handling code here:
      
    }//GEN-LAST:event_ComboCategoriaMouseClicked

    private void ComboCategoriaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboCategoriaMouseReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_ComboCategoriaMouseReleased

    private void ComboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCategoriaActionPerformed
        // TODO add your handling code here:
       

    }//GEN-LAST:event_ComboCategoriaActionPerformed

    private void ComboCategoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ComboCategoriaKeyPressed

    }//GEN-LAST:event_ComboCategoriaKeyPressed

    private void ComboCategoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ComboCategoriaKeyReleased

    }//GEN-LAST:event_ComboCategoriaKeyReleased

    private void ComboAutorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboAutorMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAutorMouseClicked

    private void ComboAutorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboAutorMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAutorMouseReleased

    private void ComboAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAutorActionPerformed

    private void ComboAutorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ComboAutorKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAutorKeyPressed

    private void ComboAutorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ComboAutorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAutorKeyReleased

    private void ComboEditorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboEditorialMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboEditorialMouseClicked

    private void ComboEditorialMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboEditorialMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboEditorialMouseReleased

    private void ComboEditorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboEditorialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboEditorialActionPerformed

    private void ComboEditorialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ComboEditorialKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboEditorialKeyPressed

    private void ComboEditorialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ComboEditorialKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboEditorialKeyReleased

    private void BotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {                                             
     
        String nombre_autor=this.ListarComboAutor();
        String nombre_Categoria=this.ListarComboCategoria();
        String nombre_Editorial=this.ListarComboEditorial();
        Autor au=new Autor();
        List<Autor> autores = ga.getAutores();
        int i=0;
        for(Autor a : autores) 
        {
            if(nombre_autor.equals(autores.get(i).getNombre())==true)
            {
                au=autores.get(i);
                break;
            }
            i++;
        }
        
        Categoria cat = new Categoria();
        List<Categoria> categorias = gc.getCategorias();
        for(Categoria c : categorias) 
        {
            if(nombre_Categoria.equals(categorias.get(i).getNombre())==true)
            {
                cat=categorias.get(i);
                break;
            }
	}
        
        Editorial edit = new Editorial();
        List<Editorial> editoriales = ge.getEditoriales();
        for(Editorial e : editoriales) 
        {
            if(nombre_Editorial.equals(editoriales.get(i).getNombre())==true)
            {
                edit=editoriales.get(i);
                break;
            }
	}
        
        gl.guardarLibro(this.codigoLibro.getText(),this.TituloLibro.getText(), au, cat, edit);
        listar();
    }
    
    void listar() {
		txtLista.setText("");
		List<Libro> libros = gl.getLibros();
		for(Libro l : libros) {
			txtLista.append(l.toString()+ "\n");
		}
	}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    
    
    public void conectarInstanciasLibro() throws Exception {
		try {  
            final Hashtable<String, Comparable> jndiProperties =  
                    new Hashtable<String, Comparable>();  
            jndiProperties.put(Context.INITIAL_CONTEXT_FACTORY,  
                    "org.wildfly.naming.client.WildFlyInitialContextFactory");  
            jndiProperties.put("jboss.naming.client.ejb.context", true);  
              
            jndiProperties.put(Context.PROVIDER_URL, "http-remoting://localhost:8090");  
            jndiProperties.put(Context.SECURITY_PRINCIPAL, "ejb");  
            jndiProperties.put(Context.SECURITY_CREDENTIALS, "ejb");  
              
            final Context context = new InitialContext(jndiProperties);  
              
            final String lookupName = "ejb:/testejbserver/GestionLibros!negocio.GestionLibrosRemote";
             
            
            this.gl = (GestionLibrosRemote) context.lookup(lookupName);
            
              
        } catch (Exception ex) {  
            ex.printStackTrace();  
            throw ex;  
        }  
	}

    /////////////////////////////////////////////////////////////////////////////////////////////////
    
    public void conectarInstanciasAutor() throws Exception {
		try {  
            final Hashtable<String, Comparable> jndiProperties =  
                    new Hashtable<String, Comparable>();  
            jndiProperties.put(Context.INITIAL_CONTEXT_FACTORY,  
                    "org.wildfly.naming.client.WildFlyInitialContextFactory");  
            jndiProperties.put("jboss.naming.client.ejb.context", true);  
              
            jndiProperties.put(Context.PROVIDER_URL, "http-remoting://localhost:8090");  
            jndiProperties.put(Context.SECURITY_PRINCIPAL, "ejb");  
            jndiProperties.put(Context.SECURITY_CREDENTIALS, "ejb");  
              
            final Context context = new InitialContext(jndiProperties);  
              
            final String lookupName = "ejb:/testejbserver/GestionAutores!negocio.GestionAutoresRemote";
             
            
            this.ga = (GestionAutoresRemote) context.lookup(lookupName);
            
              
        } catch (Exception ex) {  
            ex.printStackTrace();  
            throw ex;  
        }  
	}
    
    //////////////////////////////////////////////////////////////////////////
    
    public void conectarInstanciasCategoria() throws Exception {
		try {  
            final Hashtable<String, Comparable> jndiProperties =  
                    new Hashtable<String, Comparable>();  
            jndiProperties.put(Context.INITIAL_CONTEXT_FACTORY,  
                    "org.wildfly.naming.client.WildFlyInitialContextFactory");  
            jndiProperties.put("jboss.naming.client.ejb.context", true);  
              
            jndiProperties.put(Context.PROVIDER_URL, "http-remoting://localhost:8090");  
            jndiProperties.put(Context.SECURITY_PRINCIPAL, "ejb");  
            jndiProperties.put(Context.SECURITY_CREDENTIALS, "ejb");  
              
            final Context context = new InitialContext(jndiProperties);  
              
            final String lookupName = "ejb:/testejbserver/GestionCategorias!negocio.GestionCategoriasRemote";
             
            
            this.gc = (GestionCategoriasRemote) context.lookup(lookupName);
            
              
        } catch (Exception ex) {  
            ex.printStackTrace();  
            throw ex;  
        }  
	}
    
    //////////////////////////////////////////////////////////////////////////////////////
    
    public void conectarInstanciasEditorial() throws Exception {
		try {  
            final Hashtable<String, Comparable> jndiProperties =  
                    new Hashtable<String, Comparable>();  
            jndiProperties.put(Context.INITIAL_CONTEXT_FACTORY,  
                    "org.wildfly.naming.client.WildFlyInitialContextFactory");  
            jndiProperties.put("jboss.naming.client.ejb.context", true);  
              
            jndiProperties.put(Context.PROVIDER_URL, "http-remoting://localhost:8090");  
            jndiProperties.put(Context.SECURITY_PRINCIPAL, "ejb");  
            jndiProperties.put(Context.SECURITY_CREDENTIALS, "ejb");  
              
            final Context context = new InitialContext(jndiProperties);  
              
            final String lookupName = "ejb:/testejbserver/GestionEditoriales!negocio.GestionEditorialesRemote";
             
            
            this.ge = (GestionEditorialesRemote) context.lookup(lookupName);
            
              
        } catch (Exception ex) {  
            ex.printStackTrace();  
            throw ex;  
        }  
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonGuardar;
    private javax.swing.JComboBox<String> ComboAutor;
    private javax.swing.JComboBox<String> ComboCategoria;
    private javax.swing.JComboBox<String> ComboEditorial;
    private javax.swing.JTextField TituloLibro;
    private javax.swing.JTextField codigoLibro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtLista;
    // End of variables declaration//GEN-END:variables
}
